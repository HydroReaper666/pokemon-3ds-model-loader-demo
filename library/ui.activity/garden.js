var $=global.$,sending=!1,gardenQueue=[],triggers={},nextCallbackID=1,callbacks={};$.garden={on:function(e,n){triggers.hasOwnProperty(e)||(triggers[e]=[]),triggers[e].push(n)},trigger:function(e,n){triggers.hasOwnProperty(e)&&triggers[e].forEach(function(r){try{r(e,n)}catch(e){console.error(e)}})},notify:function(e,n){if(window.webkit&&window.webkit.messageHandlers&&window.webkit.messageHandlers.garden)window.webkit.messageHandlers.garden.postMessage({usage:e,content:n});else{var r="garden:"+e;n&&(r+="?"+encodeURIComponent(JSON.stringify(n))),gardenQueue.push(r);var a=function(){if(!sending&&gardenQueue.length>0){sending=!0;var e=gardenQueue.shift();setTimeout(function(){document.location=e,sending=!1,a()},0)}};a()}},query:function(e,n,r){var a=nextCallbackID;++nextCallbackID,callbacks[a]=r,$.garden.notify("ui.query",{name:e,parameters:n,id:a})}},"mew"===$.browser.garden&&($.garden.notify("ui.listener",{template:'$["!space"]("query").garden.trigger(${usage}, ${content})'}),$.garden.on("ui.answer",function(e,n){if(callbacks.hasOwnProperty(n.id)){var r=callbacks[n.id];delete callbacks[n.id],r&&r.call(global,n.error,n.result)}}));