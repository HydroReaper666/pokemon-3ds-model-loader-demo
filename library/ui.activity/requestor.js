const CachedRequestor=function(e,t,s){this.actor=e,this.delay=t,this.caches=s||{},this.requests=[],this.action=null};CachedRequestor.prototype.request=function(e,t){const s=this;if(!this.caches.hasOwnProperty(e)){this.requests.push({id:e,data:t});const c={};if(c.async=$.async(function(){if(c.result){let e=c.result;delete c.result,e.error?(delete s.caches[value.id],this.reject(e.error)):this.next(e.data)}else c.step=this}),this.caches[e]=c,!this.action){let e=$.is.nil(this.delay)?-1:this.delay;this.action=$.delay(e,()=>{let e=this.requests.slice(0);this.requests.length=0,this.action=null,this.actor(e,(t,s)=>{if(t)$.error(t),e.forEach(e=>{this.caches[e.id]&&(this.caches[e.id].step?(this.caches[e.id].step.reject(t),delete this.caches[e.id]):this.caches[e.id].result={error:t})});else{let t={};e.forEach(e=>{t[e.id]=!0}),s.forEach(e=>{delete t[e.id],this.caches[e.id]&&(this.caches[e.id].step?(e.error?(this.caches[e.id].step.reject(e.error),delete this.caches[e.id]):this.caches[e.id].step.next(e.data),delete this.caches[e.id].step):this.caches[e.id].result=e)}),Object.keys(t).forEach(e=>{this.caches[e]&&(this.caches[e].step?(this.caches[e].step.reject(new Error("ID "+e+" not found")),delete this.caches[e]):this.caches[e].result={error:new Error("ID "+e+" not found")})})}})})}}return this.caches[e].async},CachedRequestor.prototype.update=function(e,t){this.caches[e]={async:$.async.resolve(t)}},CachedRequestor.prototype.reset=function(e){e&&delete this.caches[e],this.request(e).rejected(function(e){$.error(e)})},$.request.cacher=function(e,t,s){return new CachedRequestor(e,t,s)};