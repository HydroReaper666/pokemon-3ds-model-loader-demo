$(function(){var t=require("./kitty.js");$.kitty=function(e){return new t(e)},$.kitty.update=function(t){if($.kitty.default)throw new Error("Default kitty already exists");$.kitty.default=t;const i=e.slice(0);e.length=0,i.forEach(t=>{try{t()}catch(t){console.error(t)}})};var e=[];$.kitty.ready=function(t){$.kitty.default?t():e.push(t)},Object.defineProperty($.kitty,"play",{get:function(){return $.kitty.default.play}}),$.kitty.mew=function(){return $.kitty.default.mew.apply($.kitty.default,arguments)},$.kitty.mew.rpc=function(){return $.kitty.default.mew.rpc.apply($.kitty.default.mew,arguments)},$.kitty.mew.auto=function(){return $.kitty.default.mew.auto.apply($.kitty.default.mew,arguments)},$.kitty.heard=function(){return $.kitty.default.heard.apply($.kitty.default,arguments)},$.kitty.heard.rpc=function(){return $.kitty.default.heard.rpc.apply($.kitty.default.heard,arguments)},$.kitty.heard.hold=function(){return $.kitty.default.heard.hold.apply($.kitty.default.heard,arguments)},$.kitty.heard.redirect=function(){return $.kitty.default.heard.redirect.apply($.kitty.default.heard,arguments)},$.kitty.interest=function(){return $.kitty.default.interest.apply($.kitty.default,arguments)},$.kitty.ignore=function(){return $.kitty.default.ignore.apply($.kitty.default,arguments)},$.kitty.reset=function(){return $.kitty.default.reset.apply($.kitty.default,arguments)},$.kitty.restatement=function(){return $.kitty.default.restatement.apply($.kitty.default,arguments)},$.kitty.on=function(){return $.kitty.default.on.apply($.kitty.default,arguments)}});