var mewUtil=require("mew_util"),NodeRequester=function(e){this.httpClient=new mewUtil.HTTPClient(e)},NodeResponse=function(e){this.getResponseHeader=function(t){return e.headers[t.toLowerCase()]}};NodeRequester.prototype.request=function(){var e=mewUtil.matchArguments([["path","callback"],["path","options","callback"],["method","path","data","callback"],["method","path","data","options","callback"]],{path:"string",callback:{acceptTypes:"function",defaultValue:function(){}},method:{acceptTypes:"string",defaultValue:"GET"},data:"any",options:{acceptTypes:"object",defaultValue:{},mergeOptions:{timeout:{"!valueType":"number","!defaultValue":5e3},async:{"!valueType":"boolean","!defaultValue":!0},headers:{"!valueType":"object","!defaultValue":{}},responseDataType:{"!valueType":"string","!defaultValue":"*"},requestDataType:{"!valueType":"string","!defaultValue":"*"}}}},arguments);e.data&&(e.data=JSON.stringify(e.data)),this.httpClient.request(e.path,{method:e.method,headers:e.options.headers,dataType:"json",timeout:e.options.timeout,data:e.data,onError:function(t){e.callback(t)},onSuccess:function(t,a){e.callback(null,t,new NodeResponse(a))}})},module.exports=NodeRequester;