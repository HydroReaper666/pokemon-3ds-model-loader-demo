((e,t)=>{const a=require("../modules/spica/index.js"),i=require("../modules/spica/texture.js");require("../modules/spica/motion.js"),require("../modules/three/main.js");let o=t("<ol>").attribute("id","pokemon-logs");t("body").append(o);let n=null;t.logger.record=function([e,a]){if("%c%s %c%s"!==a[0])return;let i=0,c=a[0].replace(/%[a-z]/g,e=>(++i,"%c"===e?"":a[i])).slice(18).split("(").slice(0,-1).join("(").split("\n")[0];n!==c&&(o.append(t("<li>").text(c)),o.children().slice(0,-15).detach(),n=c)},t.app.test=function(){new a("./resources/models/a.0.9.4").then(function(e){let a=0,o=null,n=t("<ol>").attribute("id","pokemon-list");t("body").append(n);let c=t("<ol>").attribute("id","pokemon-meshes");t("body").append(c);let l=null,r=t("<select>").attribute("id","pokemon-animations").on("change",function(){let e=r.property("value");if("none"!==e){let a=l.animations[l.property("value")].clips[e].values;let i=!1;t.async.all(a,function(e,t){o.spicaPlayAction(e,{channel:"action",fadings:[0,0,(a.length,0)],priority:327===o.pokemonID?0:20}).then(function(e){e?(i=!0,this.reject(new Error("Animation Broken"))):this.next()}).pipe(this)}).then(function(){r.property("value","none"),o.spicaPlayAction(l.animations[l.property("value")].backgrounds.breath.value,{loop:1/0,fadings:0,priority:0,channel:"action"}).rejected(function(e){t.error(e)}),this.next()}).rejected(function(e){i||t.error(e)})}});t("body").append(r),(l=t("<select>").attribute("id","pokemon-animation-set").on("change",function(){l.updateAnimations()})).updateAnimations=function(e){e&&(l.animations=e);let a=l.property("value");r.children().detach(),r.append(t("<option>").attribute("value","none").text("无")),l.animations[a].clips.forEach((e,a)=>{r.append(t("<option>").attribute("value",""+a).text(e.label+" ("+e.duration.toFixed(2)+"s)"))});["state","state2","state3","state4"].forEach((e,i)=>{if(l.animations[a].backgrounds[e]){let n={loop:1/0};327===o.pokemonID&&(n={paused:!0,frame:Math.floor(256*Math.random())}),o.spicaPlayAction(l.animations[a].backgrounds[e].value,t.merge.simple(n,{fadings:0,priority:10+i,channel:e})).rejected(function(e){t.error(e)})}}),l.animations[a].backgrounds.breath&&o.spicaPlayAction(l.animations[a].backgrounds.breath.value,{loop:1/0,fadings:0,priority:0,channel:"action"}).rejected(function(e){t.error(e)})},t("body").append(l),t.app.world.stats&&t(t.app.world.stats.dom).style({position:"absolute",left:"380px",bottom:"10px",top:"auto"});let s=null,p=t("<input>").attribute({type:"checkbox",id:"pokemon-shiny"}).on("change",function(){t.delay(function(){s(o.pokemonID,o.pokemonOffset)})});t("body").append(p);let d=t("<ol>").attribute("id","pokemon-info");t("body").append(d),s=function(r,s){let m=Date.now(),b=++a;window.location.hash=`#pokemon-${r}-${s}`,t(".selected").removeFeatures("selected");let h=t(`#pokemon-${r}-${s}`).addFeatures("selected"),g=n.positionFromPage(h.positionToPage({x:0,y:0}));return(g.y<0||g.y>=n.size().height)&&h[0].scrollIntoView({behavior:"instant",block:"center"}),t.info(`Pokemon-${r}-${s} started to load`),e.loadPokemon(r,s).then(function(e){if(t.info(`Pokemon-${r}-${s} loaded within ${Date.now()-m}ms`),m=Date.now(),b!==a)return;o&&(t.app.world.scene.remove(o),t.app.world.removeTicker(o.spicaTick),o.spicaDispose()),console.log(e);let n=e.model.files[0],h={motions:!0,shiny:p.property("checked")},g=n.toThreeObject(e,h);t.info(`Pokemon-${r}-${s} converted to THREE model within ${Date.now()-m}ms`),m=Date.now(),g.pokemonID=r,g.pokemonOffset=s,c.children().detach(),g.children.filter(e=>e.isMesh&&!e.spicaOutline).forEach(a=>{const o=a=>{let o=t("<div>").attribute("id","texture"),n=(h.shiny?e.textures.shiny:e.textures.normal).files.filter(e=>e.name===a)[0];return n?o.style("background-image","url('"+n.toImageURL()+"')").on("gesture:tap-ended",function(e,a){let i=t("<div>").addFeatures("preview").append(t("<img>").style({"background-image":`url('${n.toImageURL()}')`,width:n.width+"px",height:n.height+"px",position:"absolute",left:(document.body.clientWidth-n.width)/2+"px",top:(document.body.clientHeight-n.height)/2+"px"})).on("gesture:tap-ended",function(){i.detach()});t("body").append(i)}).attribute("title",["Name: "+n.name,"Width: "+n.width,"Height: "+n.height,"Format: "+Object.keys(i).filter(e=>i[e]===n.format)[0]].join("\n")):o.addFeatures("empty"),o},n=a=>{let i=t("<div>").attribute("id","lut"),o=e.model.files[0].lightingLUTs.filter(e=>e.hashID===a)[0];return o?i.style("background-image","url('"+o.toImageURL()+"')").on("gesture:tap-ended",function(e,a){let i=t("<div>").addFeatures("preview").append(t("<img>").style({"background-image":`url('${o.toImageURL(20)}')`,width:o.pica.lightingLUTs.data.length+"px",height:"20px",position:"absolute",left:(document.body.clientWidth-o.pica.lightingLUTs.data.length)/2+"px",top:(document.body.clientHeight-20)/2+"px"})).on("gesture:tap-ended",function(){i.detach()});t("body").append(i)}):i.addFeatures("empty"),i};let l=t("<li>").append(t("<span>").attribute("id","mesh-name").text(a.name+": "+a.material.spicaLayer+", "+a.material.spicaPriority),o(a.material.spicaTextureNames[0]),o(a.material.spicaTextureNames[1]),o(a.material.spicaTextureNames[2])).attribute("title",["Mesh: "+a.name,"Material: "+a.material.name,"Vertices: "+a.geometry.attributes.position.count,"Triangles: "+a.geometry.index.count/3,"Vertex Shader: "+a.material.spicaVertexShaderName,"Fragment Shader: "+a.material.spicaFragmentShaderName,"Alpha Test: "+(a.material.spicaAlphaTest?"Enabled":"Disabled"),"Stencil Test: "+(a.material.spicaStencilTest?"Enabled":"Disabled"),"Depth Write: "+(a.material.depthWrite?"Enabled":"Disabled")].join("\n")).on("gesture:tap-ended",function(){a.visible=!a.visible,a.visible?l.removeFeatures("disabled"):l.addFeatures("disabled")});a.material.spicaLUTs.filter(e=>e).forEach(e=>{l.append(n(e))}),l.append(t("<span>").attribute({id:"vertex-shader",title:["Name: "+a.material.spicaVertexShaderName,"File: "+a.material.spicaVertexShaderFileName,"Type: Vertex Shader","Geometry Codes: "+(a.material.spicaVertexShaderHasGeometryCodes?"Yes":"No")].join("\n")}).text(a.material.spicaVertexShaderName).on("gesture:tap-ended",function(){t.clipboard.copy(a.material.vertexShader),t.info("Vertex shader codes copied")}),t("<span>").attribute({id:"fragment-shader",title:["Name: "+a.material.spicaFragmentShaderName,"File: "+a.material.spicaFragmentShaderFileName,"Type: Fragment Shader"].join("\n")}).text(a.material.spicaFragmentShaderName).on("gesture:tap-ended",function(){t.clipboard.copy(a.material.fragmentShader),t.info("Fragment shader codes copied")}),t("<span>").attribute("id","triangles-count").text(a.geometry.index.count/3));let r=!1;a.material.spicaVertexShaderHasGeometryCodes&&(r=!0),a.material.spicaStencilTest&&(r=!0),a.material.depthWrite||(r=!0),r&&l.addFeatures("attention"),c.append(l)});const u={};g.animations.forEach(e=>{let t=e.name,a=t.split("Action")[0].toLowerCase(),i=null;switch(t){case"FightingAction1":i="breath",t="准备 #1";break;case"FightingAction2":t="强调 #2";break;case"FightingAction3":case"FightingAction4":case"FightingAction5":case"FightingAction6":case"FightingAction7":t="进入 #3 - #7";break;case"FightingAction8":t="攻击 #8";break;case"FightingAction9":t="攻击 #9";break;case"FightingAction10":t="攻击 #10";break;case"FightingAction11":t="攻击 #11";break;case"FightingAction12":t="攻击 #12";break;case"FightingAction13":t="攻击 #13";break;case"FightingAction14":t="攻击 #14";break;case"FightingAction15":t="攻击 #15";break;case"FightingAction16":t="攻击 #16";break;case"FightingAction17":t="被攻击 #17";break;case"FightingAction18":t="濒死 #18";break;case"FightingAction20":i="eye",t="眼睛状态 #20";break;case"FightingAction21":i="eye2",t="眼睛状态 #21";break;case"FightingAction22":i="eye3",t="眼睛状态 #22";break;case"FightingAction23":i="mouth",t="嘴巴状态 #23";break;case"FightingAction24":i="mouth2",t="嘴巴状态 #24";break;case"FightingAction26":i="state",t="持续变化 #26";break;case"FightingAction27":i="state2",t="持续变化 #27";break;case"FightingAction28":i="state3",t="持续变化 #28";break;case"FightingAction29":i="state4",t="持续变化 #29";break;case"PetAction1":i="breath",t="准备 #1";break;case"PetAction2":t="振奋 #2";break;case"PetAction3":t="回头 #3";break;case"PetAction4":t="开心回头 #4";break;case"PetAction5":case"PetAction6":case"PetAction7":t="瞌睡 #5 - #7";break;case"PetAction8":t="睡眠 #8";break;case"PetAction9":t="醒来 #9";break;case"PetAction10":t="清醒 #10";break;case"PetAction11":t="卖萌 #11";break;case"PetAction12":t="开心 #12";break;case"PetAction13":t="欢呼 #13";break;case"PetAction14":t="踊跃 #14";break;case"PetAction15":t="擦脸 #15";break;case"PetAction16":t="困 #16";break;case"PetAction17":t="同意 #17";break;case"PetAction18":t="瞥眼 #18";break;case"PetAction19":t="沮丧 #19";break;case"PetAction20":t="招呼 #20";break;case"PetAction21":t="跳跃 #21";break;case"PetAction22":t="生气 #22";break;case"PetAction23":case"PetAction24":case"PetAction25":t="吃 #23 - #25";break;case"PetAction26":t="抬头 #26";break;case"PetAction28":i="eye",t="眼睛状态 #28";break;case"PetAction29":i="eye2",t="眼睛状态 #29";break;case"PetAction30":i="eye3",t="眼睛状态 #30";break;case"PetAction31":i="mouth",t="嘴巴状态 #31";break;case"PetAction32":i="mouth2",t="嘴巴状态 #32";break;case"PetAction34":i="state",t="持续变化 #34";break;case"PetAction35":i="state2",t="持续变化 #35";break;case"PetAction36":i="state3",t="持续变化 #36";break;case"PetAction37":i="state4",t="持续变化 #37";break;case"MapAction1":i="breath",t="准备 #1";break;case"MapAction2":t="停留 #1";break;case"MapAction3":t="移动 #3";break;case"MapAction4":t="快速移动 #3";break;case"MapAction5":t="快速移动（进入） #4";break;case"MapAction6":t="快速移动（退出） #5";break;case"MapAction9":t="飞行（进入） #9";break;case"MapAction10":t="飞行（退出） #10";break;case"MapAction15":i="eye",t="眼睛状态 #15";break;case"MapAction16":i="eye2",t="眼睛状态 #16";break;case"MapAction17":i="eye3",t="眼睛状态 #17";break;case"MapAction18":i="mouth",t="嘴巴状态 #18";break;case"MapAction19":i="mouth2",t="嘴巴状态 #19";break;case"MapAction21":i="state",t="持续变化 #21";break;case"MapAction22":i="state2",t="持续变化 #22";break;case"MapAction23":i="state3",t="持续变化 #23";break;case"MapAction24":i="state4",t="持续变化 #24";break;case"ActingAction1":i="breath",t="战斗 准备 #1";break;case"ActingAction2":t="战斗 强调 #2";break;case"ActingAction3":t="战斗 直接进入 #3";break;case"ActingAction4":t="战斗 进入（出球） #4";break;case"ActingAction5":t="战斗 进入（空中） #5";break;case"ActingAction6":t="战斗 进入（落地） #6";break;case"ActingAction7":t="战斗 直接进入 #7";break;case"ActingAction8":t="战斗 攻击 #8";break;case"ActingAction9":t="战斗 攻击 #9";break;case"ActingAction10":t="战斗 攻击 #10";break;case"ActingAction11":t="战斗 攻击 #11";break;case"ActingAction12":t="战斗 攻击 #12";break;case"ActingAction13":t="战斗 攻击 #13";break;case"ActingAction14":t="战斗 攻击 #14";break;case"ActingAction15":t="战斗 攻击 #15";break;case"ActingAction16":t="战斗 攻击 #16";break;case"ActingAction17":t="战斗 被攻击 #17";break;case"ActingAction18":t="战斗 濒死 #18";break;case"ActingAction19":i="breath2",t="宠物 准备 #19";break;case"ActingAction20":t="宠物 振奋 #20";break;case"ActingAction21":t="宠物 回头 #21";break;case"ActingAction22":t="宠物 开心回头 #22";break;case"ActingAction23":t="宠物 瞌睡（入眠） #23";break;case"ActingAction24":t="宠物 瞌睡（睡眠） #24";break;case"ActingAction25":t="宠物 瞌睡（惊醒） #25";break;case"ActingAction26":t="宠物 睡眠 #26";break;case"ActingAction27":t="宠物 醒来 #27";break;case"ActingAction28":t="宠物 清醒 #28";break;case"ActingAction29":t="宠物 卖萌 #29";break;case"ActingAction30":t="宠物 开心 #30";break;case"ActingAction31":t="宠物 欢呼 #31";break;case"ActingAction32":t="宠物 踊跃 #32";break;case"ActingAction33":t="宠物 擦脸 #33";break;case"ActingAction34":t="宠物 困 #34";break;case"ActingAction35":t="宠物 同意 #35";break;case"ActingAction36":t="宠物 瞥眼 #36";break;case"ActingAction37":t="宠物 沮丧 #37";break;case"ActingAction38":t="宠物 招呼 #38";break;case"ActingAction39":t="宠物 跳跃 #39";break;case"ActingAction40":t="宠物 生气 #40";break;case"ActingAction41":t="宠物 吃（拿起）#41";break;case"ActingAction42":t="宠物 吃（过程）#42";break;case"ActingAction43":t="宠物 吃（吞咽）#43";break;case"ActingAction44":t="宠物 抬头 #44";break;case"ActingAction45":i="breath3",t="地图 准备 #45";break;case"ActingAction46":t="地图 停留 #46";break;case"ActingAction47":t="地图 移动 #47";break;case"ActingAction48":t="地图 快速移动 #38";break;case"ActingAction49":t="地图 快速移动（进入） #49";break;case"ActingAction50":t="地图 快速移动（退出） #50";break;case"ActingAction54":t="地图 飞行（进入） #54";break;case"ActingAction55":t="地图 飞行（退出） #55";break;case"ActingAction59":i="eye",t="眼睛状态 #15";break;case"ActingAction60":i="eye2",t="眼睛状态 #16";break;case"ActingAction61":i="eye3",t="眼睛状态 #17";break;case"ActingAction62":i="mouth",t="嘴巴状态 #18";break;case"ActingAction63":i="mouth2",t="嘴巴状态 #19";break;case"ActingAction65":i="state",t="持续变化 #21";break;case"ActingAction66":i="state2",t="持续变化 #22";break;case"ActingAction67":i="state3",t="持续变化 #23";break;case"ActingAction68":i="state4",t="持续变化 #24"}if(u[a]||(u[a]={backgrounds:{},clips:[]}),i)u[a].backgrounds[i]={value:e.name,label:t,duration:e.duration};else{let i=u[a].clips.filter(e=>e.label===t)[0];i||(i={values:[],duration:0,label:t},u[a].clips.push(i)),i.values.push(e.name),i.duration+=e.duration}}),t.request("./resources/info/pokemon-"+("00"+r).slice(-3)+".json",function(e,a){d.children().detach();let i=(e,o)=>{let n=t("<li>").append(t("<div>").attribute("id","label").text(e.label)),c=null;if(e.template){n.addFeatures("value");let i=(e=>t.format.execute(e,a,{}))(e.template);t.is(i,Array)||(i=[i]),c=t(),i.forEach(e=>{e&&c.push(t("<div>").attribute("id","value").text(e))}),c=c.lifted()}else e.values&&(n.addFeatures("values"),c=t("<ol>").attribute("id","values"),e.values.forEach(e=>{i(e,c)}));c&&c.length&&(e.post&&e.post(c),n.append(c),o.append(n))};[{label:"基本信息",values:[{label:"编号",template:"id",post:e=>e.text(("00"+e.text()).slice(-3))},{label:"中文名称",template:"names.chinese"},{label:"日文名称",template:"names.japanese"},{label:"英语名称",template:"names.english"},{label:"性别比例",template:"if (gender[0] == 0 && gender[1] == 0, '无性别', '雄性' + gender[0] + '%，雌性' + gender[1] + '%')"}]},{label:"基础值",values:[{label:"体力",template:"game.base.hp"},{label:"攻击",template:"game.base.attack"},{label:"防御",template:"game.base.defense"},{label:"特攻",template:"game.base.specialAttack"},{label:"特防",template:"game.base.specialDefence"},{label:"速度",template:"game.base.speed"}]},{label:"类型",values:[{label:"分类",template:"species"},{label:"属性",template:"types"},{label:"特性",template:"abilities.normal"},{label:"隐藏特性",template:"abilities.hidden"}]},{label:"体型",values:[{label:"分类",template:"figure.shape"},{label:"重量",template:"figure.weight",post:e=>e.text(e.text()+" kg")},{label:"高度",template:"figure.height",post:e=>e.text(e.text()+" m")}]},{label:"入手",values:[{label:"红",template:"map(gets['1st'].red, {if ($1.location, $1.location + ': ' + $1.method, $1.method)})"},{label:"绿",template:"map(gets['1st'].green, {if ($1.location, $1.location + ': ' + $1.method, $1.method)})"},{label:"蓝",template:"map(gets['1st'].blue, {if ($1.location, $1.location + ': ' + $1.method, $1.method)})"},{label:"黄",template:"map(gets['1st'].yellow, {if ($1.location, $1.location + ': ' + $1.method, $1.method)})"},{label:"金",template:"map(gets['2nd'].gold, {if ($1.location, $1.location + ': ' + $1.method, $1.method)})"},{label:"银",template:"map(gets['2nd'].silver, {if ($1.location, $1.location + ': ' + $1.method, $1.method)})"},{label:"水晶",template:"map(gets['2nd'].crystal, {if ($1.location, $1.location + ': ' + $1.method, $1.method)})"},{label:"红宝石",template:"map(gets['3rd'].ruby, {if ($1.location, $1.location + ': ' + $1.method, $1.method)})"},{label:"蓝宝石",template:"map(gets['3rd'].sapphire, {if ($1.location, $1.location + ': ' + $1.method, $1.method)})"},{label:"绿宝石",template:"map(gets['3rd'].emerald, {if ($1.location, $1.location + ': ' + $1.method, $1.method)})"},{label:"火红",template:"map(gets['3rd'].fireRed, {if ($1.location, $1.location + ': ' + $1.method, $1.method)})"},{label:"叶绿",template:"map(gets['3rd'].leafGreen, {if ($1.location, $1.location + ': ' + $1.method, $1.method)})"},{label:"钻石",template:"map(gets['4th'].diamond, {if ($1.location, $1.location + ': ' + $1.method, $1.method)})"},{label:"珍珠",template:"map(gets['4th'].pearl, {if ($1.location, $1.location + ': ' + $1.method, $1.method)})"},{label:"白金",template:"map(gets['4th'].platinum, {if ($1.location, $1.location + ': ' + $1.method, $1.method)})"},{label:"心金",template:"map(gets['4th'].heartGold, {if ($1.location, $1.location + ': ' + $1.method, $1.method)})"},{label:"魂银",template:"map(gets['4th'].soulSilver, {if ($1.location, $1.location + ': ' + $1.method, $1.method)})"},{label:"黑",template:"map(gets['5th'].black, {if ($1.location, $1.location + ': ' + $1.method, $1.method)})"},{label:"白",template:"map(gets['5th'].white, {if ($1.location, $1.location + ': ' + $1.method, $1.method)})"},{label:"黑2",template:"map(gets['5th'].black2, {if ($1.location, $1.location + ': ' + $1.method, $1.method)})"},{label:"白2",template:"map(gets['5th'].white2, {if ($1.location, $1.location + ': ' + $1.method, $1.method)})"},{label:"X",template:"map(gets['6th'].x, {if ($1.location, $1.location + ': ' + $1.method, $1.method)})"},{label:"Y",template:"map(gets['6th'].y, {if ($1.location, $1.location + ': ' + $1.method, $1.method)})"},{label:"终极红宝石",template:"map(gets['6th'].omegaRuby, {if ($1.location, $1.location + ': ' + $1.method, $1.method)})"},{label:"始源蓝宝石",template:"map(gets['6th'].alphaSapphire, {if ($1.location, $1.location + ': ' + $1.method, $1.method)})"},{label:"太阳",template:"map(gets['7th'].sun, {if ($1.location, $1.location + ': ' + $1.method, $1.method)})"},{label:"月亮",template:"map(gets['7th'].moon, {if ($1.location, $1.location + ': ' + $1.method, $1.method)})"},{label:"究极之日",template:"map(gets['7th'].ultraSun, {if ($1.location, $1.location + ': ' + $1.method, $1.method)})"},{label:"究极之月",template:"map(gets['7th'].ultraMoon, {if ($1.location, $1.location + ': ' + $1.method, $1.method)})"}]},{label:"图鉴",values:[{label:"红绿",template:"pokedex['1st'].redGreen"},{label:"蓝",template:"pokedex['1st'].blue"},{label:"黄",template:"pokedex['1st'].yellow"},{label:"金",template:"pokedex['2nd'].gold"},{label:"银",template:"pokedex['2nd'].silver"},{label:"水晶",template:"pokedex['2nd'].crystal"},{label:"红蓝绿宝石",template:"pokedex['3rd'].rubySapphireEmerald"},{label:"火红",template:"pokedex['3rd'].fireRed"},{label:"叶绿",template:"pokedex['3rd'].leafGreen"},{label:"钻石珍珠白金",template:"pokedex['4th'].diamondPearlPlatinum"},{label:"心金",template:"pokedex['4th'].heartGold"},{label:"魂银",template:"pokedex['4th'].soulSilver"},{label:"黑白",template:"pokedex['5th'].blackWhite"},{label:"黑白2",template:"pokedex['5th'].blackWhite2"},{label:"X",template:"pokedex['6th'].x"},{label:"Y",template:"pokedex['6th'].y"},{label:"始源终极宝石",template:"pokedex['6th'].omegaRubyAlphaSapphire"},{label:"太阳",template:"pokedex['7th'].sun"},{label:"月亮",template:"pokedex['7th'].moon"},{label:"究极之日",template:"pokedex['7th'].ultraSun"},{label:"究极之月",template:"pokedex['7th'].ultraMoon"}]}].forEach(e=>{i(e,d)})});let A=e.motions.fighting.files[0].animationRegion,k=Math.min(A.max[0]-A.min[0],A.max[1]-A.min[1],A.max[2]-A.min[2]),$=Math.max(A.max[0]-A.min[0],A.max[1]-A.min[1],A.max[2]-A.min[2]),f=50/$*(.5*($-k)/$+.5);g.scale.set(f,f,f),t.app.world.scene.add(g),t.app.world.addTicker(g.spicaTick),o=g,l.children().detach(),Object.keys(u).filter(e=>u[e].clips.length>0).forEach(e=>{let a={fighting:"战斗",pet:"宠物",map:"地图",acting:"剧情"}[e];l.append(t("<option>").attribute("value",e).text(a))}),l.updateAnimations(u),t.info(`Pokemon-${r}-${s} meta updated within ${Date.now()-m}ms`),m=Date.now(),t.delay(function(){t.info(`Pokemon-${r}-${s} first rendering finished within ${Date.now()-m}ms`)}),this.next()})},e.pokemons.forEach(a=>{a.models.forEach((i,o)=>{if(808!==a.id){let c=e=>{let t={female:"母",alolan:"阿罗拉",mega:"超进化","mega X":"X超进化","mega Y":"Y超进化",hat:"帽子1","hat 2":"帽子2","hat 3":"帽子3","hat 4":"帽子4","hat 5":"帽子5","hat 6":"帽子6","hat 7":"帽子7",sunny:"晴天",rainy:"雨天",snowy:"雪天",primal:"始源",attack:"攻击",defense:"防御",speed:"速度",plant:"植物",sandy:"沙土",trash:"垃圾",bloom:"开花",west:"西海岸",east:"东海岸",heat:"微波炉",wash:"洗衣机",frost:"冰箱",fan:"电风扇",mow:"除草机",origin:"起源",sky:"天空",red:"红",blue:"蓝",yellow:"黄",white:"白",orange:"橙",black:"黑",forever:"永恒",zen:"禅定",spring:"春天",summer:"夏天",autumn:"秋天",winter:"冬天",incarnate:"化身",therian:"灵兽",ordinary:"觉悟",pirouette:"歌声",aria:"舞步",water:"水",electric:"电",fire:"火",ice:"冰",ash:"牵绊",wild:"野生",heart:"爱心",star:"星型",diamond:"菱形",lady:"淑女",dowager:"贵妇",gentleman:"绅士",queen:"女王",actor:"歌舞伎",king:"国王",mini:"迷你",small:"小型",normal:"正常",big:"大型",confined:"惩戒",unbound:"解放",boss:"霸主",baile:"热辣","pom-Pom":"啪滋","pa'u":"呼拉",sensu:"轻盈",midday:"白昼",midnight:"黑夜",dusk:"黄昏",solo:"单独",school:"鱼群","red meteor":"红色流星","orange meteor":"橙色流星","yellow meteor":"黄色流星","green meteor":"绿色流星","aqua meteor":"青色流星","blue meteor":"蓝色流星","purple meteor":"紫色流星","red core":"红色核心","orange core":"橙色核心","yellow core":"黄色核心","green core":"绿色核心","aqua core":"青色核心","blue core":"蓝色核心","purple core":"紫色核心",weak:"现形","dusk Mane":"黄昏之鬃","dawn Wings":"拂晓之翼",ultra:"究极","500 Years Ago":"500年前"}[e];return t||e[0].toUpperCase()+e.slice(1)},l=e.getSprite(a.id,o),r=`No.${("000"+a.id).slice(-3)} ${a.name} ${o+1} (${i.natural}, ${i.decoration})`;l.features?r=`No.${("000"+a.id).slice(-3)} ${a.name} (${l.features.map(c).join(", ")})`:0===o&&(r=`No.${("000"+a.id).slice(-3)} ${a.name}`),n.append(t("<li>").attribute({id:`pokemon-${a.id}-${o}`,title:[`flags: [${i.natural}, ${i.decoration}]`,`file_${("00000"+(9*i.file+1)).slice(-5)}.pc`,`file_${("00000"+(9*i.file+2)).slice(-5)}.pc`,`file_${("00000"+(9*i.file+3)).slice(-5)}.pc`,`file_${("00000"+(9*i.file+4)).slice(-5)}.pc`,`file_${("00000"+(9*i.file+5)).slice(-5)}.pc`,`file_${("00000"+(9*i.file+6)).slice(-5)}.pc`,`file_${("00000"+(9*i.file+7)).slice(-5)}.pc`,`file_${("00000"+(9*i.file+8)).slice(-5)}.pc`,`file_${("00000"+(9*i.file+9)).slice(-5)}.pc`].join("\n")}).addFeatures(i.issue?"issue":"normal").addFeatures("model-"+o).append(t("<span>").attribute("id","pokemon-sprite").addFeatures("sprite-icon",l.icon),t("<span>").text(r)).on("gesture:tap-ended",function(){s(a.id,o).rejected(function(e){t.error(e)})}))}})});let m=[1,0];/^#pokemon\-[0-9]+\-[0-9]+$/.test(window.location.hash)&&(m=[parseInt(window.location.hash.split("-")[1]),parseInt(window.location.hash.split("-")[2])]),s(m[0],m[1]).rejected(function(e){t.error(e)})}).rejected(function(e){t.error(e)})}})(0,this.$);