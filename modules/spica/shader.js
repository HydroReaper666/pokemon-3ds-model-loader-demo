((e,r)=>{const t=require("./section.js"),s=require("./pica.js"),o=function(e){if(this.magic=e.readUint32(),1!==e.readUint32())throw new Error("Invalid shader version, expected 1");e.skipPadding(16,0),this.section=new t(e,"shader");let r=e.index;this.name=e.readString(64),e.readUint32(),e.readUint32(),e.skipPadding(16,0),this.commands={length:e.readUint32(),count:e.readUint32(),hash:e.readUint32(),padding:e.readUint32(),data:[]},this.fileName=e.readString(64);let o=[],n=e.index;for(;e.index<n+this.commands.length;)o.push(e.readUint32());for(this.pica=new s(o);e.index<r+this.section.length;)if(0!==e.readUint8())throw new Error("Invalid padding, expected 0")};o.prototype.analyze=function(){let e=this.pica.shader?this.pica.shader.vertex:null;if(!e||r.is.nil(e.entryPoint)?e=this.pica.shader?this.pica.shader.geometry:null:e&&!r.is.nil(e.entryPoint)||(e=null),e){const t=e.codes.data.map((r,t)=>this.decode(r,t,e)),s={};if(!e.entryPoint)throw new Error("Entry point not found for shader codes");const o=e=>{let r=e.toString(16);for(;r.length<3;)r="0"+r;return r};let n=null;if(t.forEach(e=>{switch(e.name){case"call":case"callu":case"callc":{let r=e.parameters.slice(-2)[0],t=e.parameters.slice(-2)[0]+e.parameters.slice(-1)[0]-1;if(s[r]){if("call"!==s[r].type||s[r].end!==t)throw new Error("Invalid call code range")}else{let e={func_0x000:"generateQuaternionNormal",func_0x013:"blendVertexPN",func_0x01d:"blendVertexPNT",func_0x033:"generateView",func_0x041:"transformMatrixPNT",func_0x074:"transformMatrixPN",func_0x09c:"generateTextureCoordinate",func_0x0b7:"generateTextureCoordinate2",func_0x0cf:"generateTextureCoordinate3",func_0x0df:"getTextureCoordinateSource",func_0x0e7:"calculateTextureCoordinateReflection",func_0x0ee:"calculateTextureCoordinateSphereReflection",func_0x0f4:"generateColor"};s[r]={name:"func_0x"+o(r),type:"call",end:t},e[s[r].name]&&(s[r].name=e[s[r].name])}break}case"jmpu":case"jmpc":{let r=e.line+1,t=e.parameters[e.parameters.length-2]-1;if(s[r]){if("jmp"!==s[r].type||s[r].end!==t)throw new Error("Invalid jmp code range")}else s[r]={name:" jmp_0x"+o(e.line),type:"jmp",end:t};break}case"ifu":case"ifc":if(e.parameters[e.parameters.length-2]-1-e.line>0){let r=e.line+1,t=e.parameters[e.parameters.length-2]-1;if(s[r]){if("ift"!==s[r].type||s[r].end!==t)throw new Error("Invalid ift code ranges")}else s[r]={name:" ift_0x"+o(e.line),type:"ift",end:t}}if(e.parameters[e.parameters.length-1]>0){let r=e.parameters[e.parameters.length-2],t=e.parameters[e.parameters.length-2]+e.parameters[e.parameters.length-1]-1;if(s[r]){if("iff"!==s[r].type||s[r].end!==t)throw new Error("Invalid iff code ranges")}else s[r]={name:" iff_0x"+o(e.line),type:"iff",end:t}}break;case"loop":break;case"end":n=e.line}}),r.is.nil(n))throw new Error("End not found for shader codes");s[e.entryPoint]={name:"main",type:"prog",end:n};let a={type:"code",begin:0,end:t.length,instructions:[]},i=a,l=null;return t.forEach((e,t)=>{if(s[t]){let e={label:s[t].name,superblock:i,begin:t,end:s[t].end,instructions:[],type:s[t].type};"call"===s[t].type&&(l=e,e.srcs={},e.dsts={},e.movas={}),i.instructions.push(e),i=e}if("mova"!==e.name)e.registers&&Object.keys(e.registers).forEach(r=>{let t=e.registers[r];"dst"===r?l.dsts[t.name]||(l.dsts[t.name]=e.line):l.srcs[t.name]||(l.srcs[t.name]=e.line)});else{if(l.movas[e.line]=e,l.dsts[e.registers.src1.name])throw new Error("Invalid mova instruction in calls, its parameters should be constant");l.srcs[e.registers.src1.name]||(l.srcs[e.registers.src1.name]=e.line)}"code"===i.type&&"nop"!==e.name?r.error("All non-nop codes should be inside of functions"):i.instructions.push(e),i.end===t&&(i=i.superblock)}),{type:e==this.pica.shader.vertex?"vertex":"geometry",instructions:t,labels:s,codes:a.instructions}}return{type:"fragment"}},o.prototype.describe=function(e,t,n,a){this.offsetMap={};let i=this,l=this.analyze();if("geometry"===l.type)throw new Error("Geometry shader currently not supported");if("vertex"===l.type){if(e){let e={},t={},n=(a,c,m)=>{if(a.hasOwnProperty("line")){a.registers&&Object.keys(a.registers).forEach(r=>{e[a.registers[r].name]=!0,t[a.registers[r].name]=!0});let p="// 0x"+("00"+a.line.toString(16)).slice(-3)+": "+this.describeInstruction(a),u=a.glsl;r.is.nil(u)&&(u="/* Unknown GLSL codes */");return(c+r.format(u,r.merge.simple({indent:c,code:p,name:a.name,line:a.line,parameters:a.parameters,report:l},a.registers),{functors:r.merge.simple(o.functors,{glmova:function(){let e=a.registers.dst["@1"],r=a.registers.src1["@1"],t=["gpu_"+[r.name,r.components].join("_")];return i.offsetMap[e.glsl]=t[0],a.registers.dst.size>1&&(e=a.registers.dst["@2"],r=a.registers.src1["@2"],t.push("gpu_"+[r.name,r.components].join("_")),i.offsetMap[e.glsl]=t[1]),t.map(e=>"/* used "+e+", array offset constant */").join("\n")},glend:function(){let e=-1;if(i.pica.shader.outputMap.forEach((r,t)=>{r.x.register.code===s.ShaderOutputRegister.POSITION&&(e=t)}),-1!==e)return"fragNormal = normal; fragDistance = 1.0 / sqrt(distance(eyePosition, "+new o.Register("","o"+e,"","",i).glsl+".xyz) + 1.0); gl_Position = "+new o.Register("","o"+e,"","",i).glsl;throw new Error("No gl_Position output found")},glsl:function(e,t,s,n,a){return a.map(e=>r.is(e,o.Register)?e.glsl:r.is(e,Number)?"0x"+e.toString(16):e)},glcall:function(e,r,t,s,o,n){if(0===n)throw new Error("Functions without body is not allowed");if(t.report.labels.hasOwnProperty(o)&&t.report.labels[o].end+1===o+n){let e=t.report.labels[o].name.trim(),r=l.codes.filter(r=>r.label===e)[0],s=[];return Object.keys(r.movas).forEach(e=>{s.push("int("+r.movas[e].registers.src1["@1"].glsl+")"),r.movas[e].registers.dst.size>1&&s.push("int("+r.movas[e].registers.src1["@2"].glsl+")")}),e+"("+s.join(", ")+")"}throw new Error("Call target not found")},glblock:function(e,r,t,s,o){return n(m[o],c+"    ",m.slice(o+1))}})})).split("\n").map((e,r)=>{if(0===r){for(;e.length<80;)e+=" ";e+=p}return e}).join("\n")}switch(a.type){case"call":case"prog":{t={};let e=a.instructions.filter(e=>e.hasOwnProperty("line")).map(e=>n(e,c+"    ",a.instructions.slice(a.instructions.indexOf(e)+1))).join("\n"),s=Object.keys(t).sort(r.comparator.natural).filter(e=>"r"!==e[0]&&"a"!==e[0]&&"cmp"!==e).map(e=>{let t=c+"    /* used "+new o.Register("",e,"","",this).glsl;if("b"===e[0])return"";if("o"===e[0])return"";if("v"===e[0])return"";if("c"===e[0]&&"cmp"!==e){if(this.pica.shader.vertex.floats[e.slice(1)])return"";let s=parseInt(e.slice(1)),n=Object.keys(o.floats).filter(e=>o.floats[e].from<=s&&o.floats[e].to>=s)[0];r.is.nil(n)||(t+=", "+o.floats[n].name.toLowerCase().replace(/_/g," "),o.floats[n].from!==o.floats[n].to&&(t+="["+(s-o.floats[n].from)+"]"))}else{if("a0"===e)return"";if("al"===e)return"";if("cmp"===e)return""}return t+" */\n"}).join(""),i=[];return"call"===a.type&&Object.keys(a.movas).forEach(e=>{let r=a.movas[e].registers.src1["@1"];i.push("const int gpu_"+[r.name,r.components].join("_")),a.movas[e].registers.dst.size>1&&(r=a.movas[e].registers.src1["@2"],i.push("const int gpu_"+[r.name,r.components].join("_")))}),c+"void "+a.label+"("+i.join(", ")+") {\n"+s+c+e+"\n"+c+"}\n"}default:return a.instructions.filter(e=>e.hasOwnProperty("line")).map(e=>n(e,c,a.instructions.slice(a.instructions.indexOf(e)+1))).join("\n")}},a=l.codes.map((e,r)=>n(e,"",l.codes.slice(r+1))).join("\n");return["// File: "+this.fileName,"// Type: "+l.type[0].toUpperCase()+l.type.slice(1)+" Shader","// Shader Name: "+this.name,"// Generated Date: "+r.format.date(new Date),"// Comment: This file is just auto-generated from the raw decoded Nintendo3DS shader instructions to simulate vertex shading via WebGL","",Object.keys(e).filter(e=>"o"===e[0]).sort(r.comparator.natural).map(e=>{let r=`varying vec4 ${new o.Register("",e,"","",this).glsl};`;return(r=(r+"                                                                                ").slice(0,80))+`// gpu_${e}`}).join("\n"),"varying vec4 fragNormal;","varying float fragDistance;","",Object.keys(e).filter(e=>"v"===e[0]).sort(r.comparator.natural).map(e=>{let r=`attribute vec4 ${new o.Register("",e,"","",this).glsl};`;return(r=(r+"                                                                                ").slice(0,80))+`// gpu_${e}`}).join("\n"),"",Object.keys(e).filter(e=>"b"===e[0]).sort(r.comparator.natural).map(e=>{let r=`uniform bool ${new o.Register("",e,"","",this).glsl};`;return(r=(r+"                                                                                ").slice(0,80))+`// gpu_${e}`}).join("\n"),"","uniform vec3 eyePosition;",("uniform vec4 "+new o.Register("","c96","","",this).glsl+";                                                                                ").slice(0,80)+"// gpu_c[96]",Object.keys(e).filter(e=>"cmp"!==e&&"c"===e[0]&&!this.pica.shader.vertex.floats[e.slice(1)]).sort(r.comparator.natural).map(e=>{let t=parseInt(e.slice(1)),s=Object.keys(o.floats).filter(e=>o.floats[e].from<=t&&o.floats[e].to>=t)[0],n="/* "+new o.Register("",e,"","",this).glsl+" used, ";return r.is.nil(s)?(n+="lack of detail usage information",r.warn("Unknown vector usage "+e)):(n+=o.floats[s].name.toLowerCase().replace(/_/g," "),o.floats[s].from!==o.floats[s].to&&(n+="["+(t-o.floats[s].from)+"]")),n+=" */"}).join("\n"),"","vec4 gpu_r[16];","bvec2 gpu_cmp;","","float spicaLog2(float value);","float spicaExp2(float value);",l.codes.filter(e=>r.is.nil(e.line)).map(e=>{let r=[];return"call"===e.type&&Object.keys(e.movas).forEach(t=>{let s=e.movas[t].registers.src1["@1"];r.push("const int gpu_"+[s.name,s.components].join("_")),e.movas[t].registers.dst.size>1&&(s=e.movas[t].registers.src1["@2"],r.push("const int gpu_"+[s.name,s.components].join("_")))}),"void "+e.label+"("+r.join(", ")+");"}).join("\n"),"","float spicaLog2(float value) {","    if (value == 0.0) {","        return -4294967296.0;","    } else {","        return log2(value);","    }","}","","float spicaExp2(float value) {","    if (value <= -4294967296.0) {","        return 0.0;","    } else {","        return exp2(value);","    }","}","",a,""].join("\n")}{let e=[],t=l.instructions.map(t=>{let s=t.line.toString(16);for(;s.length<3;)s="0"+s;let n=this.describeInstruction(t);if(t.comment){for(;n.length<50;)n+=" ";n+="// "+r.format(t.comment,r.merge.simple({name:t.name,line:t.line,parameters:t.parameters,report:l},t.registers),{functors:o.functors})}let a="";for(l.labels[t.line]&&(a=l.labels[t.line].name+":",e.push(l.labels[t.line]));a.length<16;)a+=" ";let i=[];for(;e.length>0&&e[e.length-1].end===t.line;)i.push("\n          <"+e.pop().name.trim());return"0x"+s+"  "+a+n+i.join("")}).join("\n");return["File: "+this.fileName,"Type: "+l.type[0].toUpperCase()+l.type.slice(1)+" Shader","Shader Name: "+this.name,"Generated Date: "+r.format.date(new Date),"Comment: This file is just auto-generated from the raw decoded Nintendo 3DS vertex shader instructions for human readable","",t,""].join("\n")}}{let e=[!1,!1,!1],a=!1,i=["// File: "+this.fileName,"// Type: "+l.type[0].toUpperCase()+l.type.slice(1)+" Shader","// Shader Name: "+this.name,"// Generated Date: "+r.format.date(new Date),"// Comment: This file is just auto-generated from the raw decoded Nintendo3DS GPU instructions to simulate fragment shading via WebGL","","precision mediump float;","","uniform vec3 emission;","uniform vec3 ambient;","uniform vec3 diffuse;","uniform vec3 speculars[2];","","uniform vec4 constants[6];","","uniform sampler2D map;","uniform sampler2D map2;","uniform sampler2D map3;","","uniform vec4 uvVectors[10];","","uniform samplerCube textureCube;","","uniform sampler2D lutDist0;","uniform sampler2D lutDist1;","uniform sampler2D lutFresnel;","uniform sampler2D lutReflectR;","uniform sampler2D lutReflectG;","uniform sampler2D lutReflectB;","","uniform vec4 environmentAmbient;","","uniform int lightsCount;","uniform vec3 lightPositions[3];","uniform vec3 lightDirections[3];","uniform vec4 lightAmbients[3];","uniform vec4 lightDiffuses[3];","uniform vec4 lightSpeculars[6];","uniform bool lightDirectionals[3];","","varying vec4 fragQuaternionNormal;","varying vec4 fragColor;","varying vec4 fragUV;","varying vec4 fragUV2;","varying vec4 fragUV3;","varying vec4 fragView;","varying vec4 fragNormal;","","varying float fragDistance;","","vec3 rotateQuaternion(vec4 q, vec3 v) {","    return v + 2.0 * cross(q.xyz, cross(q.xyz, v) + q.w * v);","}","","void main() {","","    vec4 textures[3];","    vec4 color;","    vec4 previous;",`    vec4 buffer = vec4(${["r","g","b","a"].map(e=>o.float(this.pica.rendering.bufferColor[e]/255)).join(", ")});`,""];if(this.pica.rendering.stages.forEach((r,l)=>{let c=!r.isColorPassThrough,m=!r.isAlphaPassThrough,p=[],u=[];(c||m)&&i.push("    /* stage "+(l+1)+" */");let d=0;for(;d<3;){a||r.source.color[d].code!==s.TextureCombinerSource.FRAGMENT_PRIMARY_COLOR&&r.source.alpha[d].code!==s.TextureCombinerSource.FRAGMENT_PRIMARY_COLOR&&r.source.color[d].code!==s.TextureCombinerSource.FRAGMENT_SECONDARY_COLOR&&r.source.alpha[d].code!==s.TextureCombinerSource.FRAGMENT_SECONDARY_COLOR||(i.push(this.decodeFragmentColors(t,n,e).split("\n").map(e=>"    "+e).join("\n")),a=!0);let o=0;for(;o<3;)e[o]||r.source.color[d].code!==s.TextureCombinerSource.TEXTURE_0+o&&r.source.alpha[d].code!==s.TextureCombinerSource.TEXTURE_0+o||i.push("    "+this.decodeTextureColor(t,o,e)),++o;let c=this.decodeCombinerSource(r.source.color[d],l),m=this.decodeCombinerSource(r.source.alpha[d],l);switch(-2&r.operand.color[d].code){case s.TextureCombinerColor.COLOR:c.components="rgba";break;case s.TextureCombinerColor.ALPHA:c.components="aaaa";break;case s.TextureCombinerColor.RED:c.components="rrrr";break;case s.TextureCombinerColor.GREEN:c.components="gggg";break;case s.TextureCombinerColor.BLUE:c.components="bbbb";break;default:throw new Error("Invalid combiner color")}switch(-2&r.operand.alpha[d].code){case s.TextureCombinerAlpha.ALPHA:m.components="a";break;case s.TextureCombinerAlpha.RED:m.components="r";break;case s.TextureCombinerAlpha.GREEN:m.components="g";break;case s.TextureCombinerAlpha.BLUE:m.components="b";break;default:throw new Error("Invalid combiner alpha")}0!=(1&r.operand.color[d].code)&&(c.sign="1.0 - "),0!=(1&r.operand.alpha[d].code)&&(m.sign="1.0 - "),p.push(c),u.push(m),++d}if(c)switch(r.mode.color.code){case s.TextureCombinerMode.REPLACE:i.push(`    color.rgb = ${p[0][3]};`);break;case s.TextureCombinerMode.MODULATE:i.push(`    color.rgb = ${p[0][3]} * ${p[1][3]};`);break;case s.TextureCombinerMode.ADD:i.push(`    color.rgb = min(${p[0][3]} + ${p[1][3]}, 1.0);`);break;case s.TextureCombinerMode.ADD_SIGNED:i.push(`    color.rgb = clamp(${p[0][3]} + ${p[1][3]} - 0.5, 0.0, 1.0);`);break;case s.TextureCombinerMode.INTERPOLATE:i.push(`    color.rgb = mix(${p[1][3]}, ${p[0][3]}, ${p[2][3]});`);break;case s.TextureCombinerMode.SUBTRACT:i.push(`    color.rgb = max(${p[0][3]} - ${p[1][3]}, 0.0);`);break;case s.TextureCombinerMode.DOT_PRODUCT_3_RGB:i.push(`    color.rgb = vec3(min(dot(${p[0][3]} - 0.5, ${p[1][3]} - 0.5) * 4.0, 1.0));`);break;case s.TextureCombinerMode.DOT_PRODUCT_3_RGBA:i.push(`    color.rgb = vec3(min(dot(${p[0]} - 0.5, ${p[1]} - 0.5) * 4.0, 1));`);break;case s.TextureCombinerMode.MUL_ADD:i.push(`    color.rgb = min(${p[0][3]} * ${p[1][3]} + ${p[2][3]}, 1.0);`);break;case s.TextureCombinerMode.ADD_MUL:i.push(`    color.rgb = min(${p[0][3]} + ${p[1][3]}, 1.0) * ${p[2][3]};`);break;default:throw new Error("Invalid color combiner code")}if(m)switch(r.mode.alpha.code){case s.TextureCombinerMode.REPLACE:i.push(`    color.a = ${u[0]};`);break;case s.TextureCombinerMode.MODULATE:i.push(`    color.a = ${u[0]} * ${u[1]};`);break;case s.TextureCombinerMode.ADD:i.push(`    color.a = min(${u[0]} + ${u[1]}, 1.0);`);break;case s.TextureCombinerMode.ADD_SIGNED:i.push(`    color.a = clamp(${u[0]} + ${u[1]} - 0.5, 0.0, 1.0);`);break;case s.TextureCombinerMode.INTERPOLATE:i.push(`    color.a = mix(${u[1]}, ${u[0]}, ${u[2]});`);break;case s.TextureCombinerMode.SUBTRACT:i.push(`    color.a = max(${u[0]} - ${u[1]}, 0.0);`);break;case s.TextureCombinerMode.DOT_PRODUCT_3_RGB:i.push(`    color.a = min(dot(vec3(${u[0]} - 0.5), vec3(${u[1]} - 0.5)) * 4.0, 1.0);`);break;case s.TextureCombinerMode.DOT_PRODUCT_3_RGBA:i.push(`    color.a = min(dot(vec4(${u[0]} - 0.5), vec4(${u[1]} - 0.5)) * 4.0, 1.0);`);break;case s.TextureCombinerMode.MUL_ADD:i.push(`    color.a = min(${u[0]} * ${u[1]} + ${u[2]}, 1.0);`);break;case s.TextureCombinerMode.ADD_MUL:i.push(`    color.a = min(${u[0]} + ${u[1]}, 1.0) * ${u[2]};`);break;default:throw new Error("Invalid alpha combiner code")}let g=1<<r.scale.color.code,f=1<<r.scale.alpha.code;1!==g&&i.push(`    color.rgb = min(color.rgb * ${o.float(g)}, 1.0);`),1!==f&&i.push(`    color.a = min(color.a * ${o.float(f)}, 1.0);`),r.buffers&&(r.buffers.color&&i.push("    buffer.rgb = color.rgb;"),r.buffers.alpha&&i.push("    buffer.a = color.a;")),l<6&&(c||m)&&i.push("    previous = color;"),(c||m)&&i.push("")}),t.pica.rendering.alphaTest&&t.pica.rendering.alphaTest.enabled){let e=o.float(t.pica.rendering.alphaTest.reference/255),r=null;switch(t.pica.rendering.alphaTest.testFunction.code){case s.TestFunction.NEVER:i.push("    discard;");break;case s.TestFunction.EQUAL_TO:r="!=";break;case s.TestFunction.NOT_EQUAL_TO:r="==";break;case s.TestFunction.LESS_THAN:r=">=";break;case s.TestFunction.LESS_THAN_OR_EQUAL_TO:r=">";break;case s.TestFunction.GREATER_THAN:r="<=";break;case s.TestFunction.GREATER_THAN_OR_EQUAL_TO:r="<";break;default:throw new Error("Invalid test function")}r&&i.push(`    if (color.a ${r} ${e}) {`,"        discard;","    }")}else i.push("    color.a = 1.0;");return i.push("    color.rgb *= color.a;"),i.push("    gl_FragColor = color;"),i.push(""),i.push("}"),i.join("\n")+"\n"}},o.prototype.describeInstruction=function(e){let t=e.parameters.map(e=>r.is(e,o.Register)?e.toString():r.is(e,Number)?"0x"+e.toString(16):e);if(!(t.length>0))return`${e.name};`;switch(e.name){case"call":return`${e.name} ${t.slice(-2).join(", ")};`;case"cmp":return`${e.name} ${t.slice(0,3).join(" ")}${t.length>3?", "+t.slice(3).join(" "):""};`;default:return`${e.name} ${t.join(", ").trim()};`}},o.prototype.decode=function(e,t,s){let n=e>>26&63,a=67108863&e,i=Object.keys(o.codes).filter(e=>o.codes[e].from<=n&&o.codes[e].to>=n)[0];if(!i)throw new Error("Invalid opcode "+n);const l=o.codes[i].format;let c=null,m=[];switch(l){case"0":break;case"1":{let e=this.decodeOperand(a>>0&127,s),t=this.decodeRelativeAddressing(a>>19&3);c=this.decodeRegisters({dst:a>>21&31,src1:[a>>12&127,t],src2:a>>7&31},e),o.codes[i].strip&&(r.is(o.codes[i].strip,Boolean)?(c.src1=c.src1[c.dst.size],c.src2=c.src2[c.dst.size]):(c.src1=c.src1[o.codes[i].strip],c.src2=c.src2[o.codes[i].strip])),m=[c.dst,c.src1,c.src2];break}case"1i":{let e=this.decodeOperand(a>>0&127,s),t=this.decodeRelativeAddressing(a>>19&3);c=this.decodeRegisters({dst:a>>21&31,src1:a>>14&31,src2:[a>>7&127,t]},e),o.codes[i].strip&&(r.is(o.codes[i].strip,Boolean)?(c.src1=c.src1[c.dst.size],c.src2=c.src2[c.dst.size]):(c.src1=c.src1[o.codes[i].strip],c.src2=c.src2[o.codes[i].strip])),m=[c.dst,c.src1,c.src2];break}case"1u":{let e=this.decodeOperand(a>>0&127,s),t=this.decodeRelativeAddressing(a>>19&3);c=this.decodeRegisters({dst:a>>21&31,src1:[a>>12&127,t]},e),"mova"===i.toLowerCase()&&(c.dst.name="a0"),o.codes[i].strip&&(r.is(o.codes[i].strip,Boolean)?c.src1=c.src1[c.dst.size]:c.src1=c.src1[o.codes[i].strip]),m=[c.dst,c.src1];break}case"1c":{const r=["==","!=","<","<=",">",">="];let t=this.decodeOperand(a>>0&127,s),n=this.decodeRelativeAddressing(a>>19&3),i=r[e/2>>23&7],l=r[a>>21&7];(c=this.decodeRegisters({src1:[a>>12&127,n],src2:a>>7&31},t)).dst=new o.Register("","cmp","","xy",this),i&&m.push(c.src1["@1"],i,c.src2["@1"]),l&&m.push(c.src1["@2"],l,c.src2["@2"]);break}case"2":{let e=a>>25&1,r=a>>24&1,t=a>>22&3,s=new o.Register(e?"":"!","cmp","","x",this),n=new o.Register(r?"":"!","cmp","","y",this);switch(t){case 0:m.push(s,"||",n);break;case 1:m.push(s,"&&",n);break;case 2:m.push(s);break;case 3:m.push(n);break;default:throw new Error("Invalid state for cmp")}c=t<2?{cmp:new o.Register("","cmp","","xy",this)}:{cmp:new o.Register("","cmp","",2===t?"x":"y",this)};let i=a>>10&4095,l=a>>0&255;m.push(i),m.push(l);break}case"3":{let e=255&a,r=a>>10&4095,t=a>>22&15;if(!o.codes[i].reg)throw new Error("Invalid uniform value");c={test:new o.Register("",o.codes[i].reg+t,"","",this)},m.push(c.test),m.push(r),m.push(e);break}case"4":{let e=a>>24&3,r=0!=(a>>23&1),t=0!=(a>>22&1);m.push(e),r&&m.push("primitive"),t&&m.push("winding");break}case"5":{let t=this.decodeOperand(a>>0&31,s),n=this.decodeRelativeAddressing(a>>22&3);c=this.decodeRegisters({dst:e>>24&31,src1:a>>17&31,src2:[a>>10&127,n],src3:a>>5&31},t),o.codes[i].strip&&(r.is(o.codes[i].strip,Boolean)?(c.src1=c.src1[c.dst.size],c.src2=c.src2[c.dst.size],c.src3=c.src3[c.dst.size]):(c.src1=c.src1[o.codes[i].strip],c.src2=c.src2[o.codes[i].strip],c.src3=c.src3[o.codes[i].strip])),m.push(c.dst),m.push(c.src1),m.push(c.src2),m.push(c.src3);break}case"5i":{let t=this.decodeOperand(a>>0&31,s),n=this.decodeRelativeAddressing(a>>22&3);c=this.decodeRegisters({dst:e>>24&31,src1:a>>17&31,src2:a>>12&31,src3:[a>>5&127,n]},t),o.codes[i].strip&&(r.is(o.codes[i].strip,Boolean)?(c.src1=c.src1[c.dst.size],c.src2=c.src2[c.dst.size],c.src3=c.src3[c.dst.size]):(c.src1=c.src1[o.codes[i].strip],c.src2=c.src2[o.codes[i].strip],c.src3=c.src3[o.codes[i].strip])),m.push(c.dst),m.push(c.src1),m.push(c.src2),m.push(c.src3);break}default:throw new Error("Unknown command format")}return{line:t,code:e,name:i.toLowerCase(),parameters:m,registers:c,format:l,glsl:o.codes[i].glsl,comment:o.codes[i].comment}},o.prototype.decodeRegisters=function(e,t){let s={};return Object.keys(e).forEach(n=>{const a="dst"===n;let i=e[n],l="";r.is(i,Array)&&(l=i[1],i=i[0]);let c="";a||(c=t["sign"+n[3]]),c||(c="");const m=this.decodeRegisterName(a?"dst":"src",i);let p=t[n];p||(p=""),s[n]=new o.Register(c,m,l,p,this)}),s},o.prototype.decodeRegisterName=function(e,r){if("dst"===e){if(0<=r&&r<=6)return"o"+r;if(16<=r&&r<=31)return"r"+r%16;throw new Error("Invalid dst register")}if("src"===e){if(0<=r&&r<=12)return"v"+r;if(16<=r&&r<=31)return"r"+r%16;if(32<=r&&r<=127)return"c"+(r-32);throw new Error("Invalid src register "+r)}throw new Error("Invalid register type")},o.prototype.decodeOperand=function(e,r){let t=r.opdescs.data[e];let s=(e=>{let r=0!=(4&e),t=0!=(2&e),s=0!=(1&e);return(0!=(8&e)?"x":"")+(r?"y":"")+(t?"z":"")+(s?"w":"")})(15&t);const o=e=>{let r=[],t=0;for(;t<4;){switch(e>>2*t&3){case 0:r.push("x");break;case 1:r.push("y");break;case 2:r.push("z");break;case 3:r.push("w")}++t}return r.reverse().join("")};let n=o(t>>5&255),a=o(t>>14&255),i=o(Math.floor(t/8388608)%256);return{dst:s,sign1:0!=(t>>4&1)?"-":"",src1:n,sign2:0!=(t>>13&1)?"-":"",src2:a,sign3:0!=(t>>22&1)?"-":"",src3:i}},o.prototype.decodeRelativeAddressing=function(e){switch(e){case 0:return"";case 1:return new o.Register("","a0","","x",this);case 2:return new o.Register("","a0","","y",this);case 3:return new o.Register("","al","","",this);default:throw new Error("Invalid code for relative addressing")}},o.prototype.decodeCombinerSource=function(e,r){switch(e.code){case s.TextureCombinerSource.PRIMARY_COLOR:return new o.Register("","fragColor","","",this);case s.TextureCombinerSource.FRAGMENT_PRIMARY_COLOR:return new o.Register("","lutColor","","",this);case s.TextureCombinerSource.FRAGMENT_SECONDARY_COLOR:return new o.Register("","lutColor2","","",this);case s.TextureCombinerSource.TEXTURE_0:return new o.Register("","textures","0","",this);case s.TextureCombinerSource.TEXTURE_1:return new o.Register("","textures","1","",this);case s.TextureCombinerSource.TEXTURE_2:return new o.Register("","textures","2","",this);case s.TextureCombinerSource.PREVIOUS_BUFFER:return new o.Register("","buffer","","",this);case s.TextureCombinerSource.CONSTANT:return new o.Register("","constants",r,"","",this);case s.TextureCombinerSource.PREVIOUS:return new o.Register("","previous","","",this);default:throw new Error("Invalid combiner source")}},o.prototype.decodeTextureColor=function(e,t,s){let o=e.textureCoordinates[t];o||(r.warn("Invalid texture index "+t),o={index:t,mappingType:{label:"UV",code:3}});let n=["fragUV","fragUV2","fragUV3"][o.index],a=["map","map2","map3"],i=null;switch(o.mappingType.label){case"CAMERA_CUBE":i=`textureCube(textureCube, ${n}.xyz)`;break;case"PROJECTION":i=`texture2DProj(${a[t]}, ${n})`;break;case"CAMERA_SPHERE":case"UV":case"SHADOW":case"SHADOW_BOX":i=`texture2D(${a[t]}, ${n}.xy + vec2(uvVectors[${1+3*t}].w, uvVectors[${2+3*t}].w))`;break;default:throw new Error("Unsupported mapping type")}return s[t]=!0,`textures[${t}] = ${i};`},o.prototype.decodeFragmentColors=function(e,t,s){let o=e.pica.lightingLUTs,n=this.getLightingLUTInput(o.inputSelection.dist0,o.inputScale.dist0,"lutDist0"),a=this.getLightingLUTInput(o.inputSelection.dist1,o.inputScale.dist1,"lutDist1"),i=(this.getLightingLUTInput(o.inputSelection.fresnel,o.inputScale.fresnel,"lutFresnel"),this.getLightingLUTInput(o.inputSelection.reflectR,o.inputScale.reflectR,"lutReflectR")),l=this.getLightingLUTInput(o.inputSelection.reflectG,o.inputScale.reflectG,"lutReflectG"),c=this.getLightingLUTInput(o.inputSelection.reflectB,o.inputScale.reflectB,"lutReflectB"),m=[`vec4 lutColor = vec4((emission + ambient * environmentAmbient.rgb * environmentAmbient.a).rgb, 1.0);`,"vec4 lutColor2 = vec4(0.0, 0.0, 0.0, 1.0);"],p=e.bumpTexture>=0&&e.bumpTexture<3,u=-1===e.bumpTexture;if(p&&(s[e.bumpTexture]||m.push(this.decodeTextureColor(e,e.bumpTexture,s))),p){let r=`textures[${e.bumpTexture}].rgb * 2.0 - 1.0`;u?(m.push("vec3 surfaceNormal = vec3(0.0, 0.0, 1.0);"),m.push(`vec3 surfaceTangent = normalize(${r});`)):(m.push(`vec3 surfaceNormal = normalize(${r});`),m.push("vec3 surfaceTangent = vec3(1.0, 0.0, 0.0);"))}else m.push("vec3 surfaceNormal = vec3(0.0, 0.0, 1.0);"),m.push("vec3 surfaceTangent = vec3(1.0, 0.0, 0.0);");let d="speculars[0]",g="speculars[1]";return m.push("vec4 normalizedNormal = normalize(fragQuaternionNormal);"),m.push("vec3 normal = rotateQuaternion(normalizedNormal, surfaceNormal);"),m.push("vec3 tangent = rotateQuaternion(normalizedNormal, surfaceTangent);"),m.push("for (int i = 0; i < 3; i++) {"),m.push("    if (i < lightsCount) {"),m.push(""),m.push("        vec3 light = normalize(lightPositions[i].xyz);"),m.push(""),m.push("        vec3 halfVec = normalize(normalize(fragView.xyz) + light);"),m.push(""),m.push("        float cosNormalHalf = dot(normal, halfVec);"),m.push("        float cosViewHalf = dot(normalize(fragView.xyz), halfVec);"),m.push("        float cosNormalView = dot(normal, normalize(fragView.xyz));"),m.push("        float cosLightNormal = dot(light, normal);"),m.push("        float cosLightSpot = dot(light, lightDirections[i]);"),m.push("        float cosPhi = dot(halfVec - normal / dot(normal, normal) * dot(normal, halfVec), tangent);"),m.push(""),m.push("        float ln = max(cosLightNormal, 0.0);"),m.push(""),t.dist0&&(m.push(`        float d0 = ${n};`),d+=" * d0"),(t.reflectR||t.reflectG||t.reflectB)&&(m.push("        vec3 r = speculars[1];"),t.reflectR?m.push(`        r.r = ${i};`):m.push("        r.r = 1.0;"),t.reflectG?m.push(`        r.g = ${l};`):m.push("        r.g = 1.0;"),t.reflectB?m.push(`        r.b = ${c};`):m.push("        r.b = 1.0;"),g="r"),t.dist1&&(m.push(`        float d1 = ${a}`),g+=" * d1"),m.push("        vec3 diffuseColor = ambient * lightAmbients[i].rgb * lightAmbients[i].a + diffuse * lightDiffuses[i].rgb * lightDiffuses[i].a * clamp(ln, 0.0, 1.0);"),m.push(`        vec3 specularColor = ${d} * lightSpeculars[i * 2].rgb * lightSpeculars[i * 2].a + ${g} * lightSpeculars[i * 2 + 1].rgb * lightSpeculars[i * 2 + 1].a;`),m.push("        lutColor.rgb += diffuseColor.rgb;"),m.push(`        lutColor2.rgb += specularColor.rgb;`),t.fresnel&&r.warn("FRESNEL not determined"),m.push("    }"),m.push("}"),m.push("lutColor = clamp(lutColor, 0.0, 1.0);"),m.push("lutColor2 = clamp(lutColor2, 0.0, 1.0);"),m.push(""),m.join("\n")},o.prototype.getLightingLUTInput=function(e,r,t){let o=null;switch(e.code){case s.LightingLUTInputSelectionChoice.NORMAL_HALF:o="cosNormalHalf";break;case s.LightingLUTInputSelectionChoice.VIEW_HALF:o="cosViewHalf";break;case s.LightingLUTInputSelectionChoice.NORMAL_VIEW:o="cosNormalView";break;case s.LightingLUTInputSelectionChoice.LIGHT_NORMAL:o="cosLightNormal";break;case s.LightingLUTInputSelectionChoice.LIGHT_SPOT:o="cosLightSpot";break;case s.LightingLUTInputSelectionChoice.PHI:o="cosPhi";break;default:o="cosNormalHalf"}let n=`texture2D(${t}, vec2((1.0 - ${o}) * 0.5, 0.0)).r`;switch(r.code){case s.LightingLUTInputScaleMode.ONE:break;case s.LightingLUTInputScaleMode.TWO:n=`min(${n} * 2.0, 1.0)`;break;case s.LightingLUTInputScaleMode.FOUR:n=`min(${n} * 4.0, 1.0)`;break;case s.LightingLUTInputScaleMode.QUARTER:n=`min(${n} * 0.25, 1.0)`;break;case s.LightingLUTInputScaleMode.HALF:n=`min(${n} * 0.5, 1.0)`;break;default:throw new Error("Input scale not found")}return n},o.bools={0:"has_bone",1:"light",2:"uv_map_0",3:"uv_map_1",4:"uv_map_2",5:"uv_map_1_sphere_reflection",6:"uv_map_2_sphere_reflection",7:"light_specular",8:"normal_specular",9:"diffuse",10:"smooth_skin",11:"rigid_skin"},o.floats={0:{name:"texture_coordinate_map",from:0,to:0},1:{name:"texture_0_transposed_matrix",from:1,to:3},4:{name:"texture_1_transposed_matrix",from:4,to:6},7:{name:"texture_2_transposed_matrix",from:7,to:8},9:{name:"texture_transform",from:9,to:9},10:{name:"indexed_transposed_bone_matrices[0]",from:10,to:69},82:{name:"rim_and_phong_specular",from:82,to:82},83:{name:"light_direction",from:83,to:83},84:{name:"bounding_box_or_light_diffuse",from:84,to:84},85:{name:"shader_parameter",from:85,to:85},86:{name:"transposed_projection_matrix",from:86,to:89},90:{name:"transposed_view_matrix",from:90,to:92},93:{name:"vec4(0, 1, 2, 3)",from:93,to:93},94:{name:"vec4(0.5, sin(1.7), 1/255, 0)",from:94,to:94},95:{name:"vec4(3, 4, 5, 6)",from:95,to:95}},(o.codes={}).ADD={from:0,to:0,format:"1",strip:!0,comment:"${dst} = ${src1} + ${src2};",glsl:"${dst.glsl} = ${src1.glsl} + ${src2.glsl};"},o.codes.DP3={from:1,to:1,format:"1",strip:3,comment:"${dst[1]} = dot(${src1[3]}, ${src2[3]});",glsl:"${dst[1].glsl} = dot(${src1[3].glsl}, ${src2[3].glsl});"},o.codes.DP4={from:2,to:2,format:"1",comment:"${dst[1]} = dot(${src1}, ${src2});",glsl:"${dst[1].glsl} = dot(${src1.glsl}, ${src2.glsl});"},o.codes.DPH={from:3,to:3,format:"1",strip:3,comment:"${dst} = ${vec('dot(' + src1[3] + ', ' + src2[3] + ')', dst.size)};",glsl:"${dst.glsl} = ${vec('dot(' + src1[3].glsl + ', ' + src2[3].glsl + ')', dst.size)};"},o.codes.DST={from:4,to:4,format:"1",comment:"${dst} = vec4(1, ${src1.name}.y * ${src1.name}.y, ${src1.name}.z, ${src2.name}.w);"},o.codes.EX2={from:5,to:5,format:"1u",strip:!0,comment:"${dst} = exp2(${src1});",glsl:"${dst.glsl} = spicaExp2(${src1.glsl});"},o.codes.LG2={from:6,to:6,format:"1u",strip:!0,comment:"${dst} = log2(${src1});",glsl:"${dst.glsl} = spicaLog2(${src1.glsl});"},o.codes.LITP={from:7,to:7,format:"1u",comment:"${dst} = vec4(max(${src1.name}.x, 0), clamp(${src1.name}.y, -1, 1), 0, max(${src1.name}.w, 0)); cmp.x = ${src1.name}.x > 0 ? 1 : 0; cmp.y = ${src1.name}.w > 0 ? 1 : 0; "},o.codes.MUL={from:8,to:8,format:"1",strip:!0,comment:"${dst} = ${src1} * ${src2};",glsl:"${dst.glsl} = ${src1.glsl} * ${src2.glsl};"},o.codes.SGE={from:9,to:9,format:"1",comment:"${dst} = (${src1} >= ${src2}) ? 1 : 0;",glsl:"${dst.glsl} = (${src1.glsl} >= ${src2.glsl}) ? 1 : 0;"},o.codes.SLT={from:10,to:10,format:"1",comment:"${dst} = (${src1} < ${src2}) ? 1 : 0;",glsl:"${dst.glsl} = (${src1.glsl} < ${src2.glsl}) ? 1 : 0;"},o.codes.FLR={from:11,to:11,format:"1u",strip:!0,comment:"${dst} = floor(${src1});",glsl:"${dst.glsl} = floor(${src1.glsl});"},o.codes.MAX={from:12,to:12,format:"1",strip:!0,comment:"${dst} = max(${src1}, ${src2});",glsl:"${dst.glsl} = max(${src1.glsl}, ${src2.glsl});"},o.codes.MIN={from:13,to:13,format:"1",strip:!0,comment:"${dst} = min(${src1}, ${src2});",glsl:"${dst.glsl} = min(${src1.glsl}, ${src2.glsl});"},o.codes.RCP={from:14,to:14,format:"1u",strip:!0,comment:"${dst} = ${vec('1.0', dst.size)} / ${src1};",glsl:"${dst.glsl} = ${vec('1', dst.size)} / ${src1.glsl};"},o.codes.RSQ={from:15,to:15,format:"1u",strip:!0,comment:"${dst} = ${vec('1', dst.size)} / sqrt(${src1});",glsl:"${dst.glsl} = inversesqrt(${src1.glsl});"},o.codes.MOVA={from:18,to:18,format:"1u",strip:!0,comment:"a0.${dst.components} = ${if(dst.size >= 2, 'ivec2', 'int')}(${src1[dst.size]});",glsl:"${glmova()}"},o.codes.MOV={from:19,to:19,format:"1u",strip:!0,comment:"${dst} = ${src1};",glsl:"${dst.glsl} = ${src1.glsl};"},o.codes.DPHI={from:24,to:24,format:"1i",strip:3,comment:"${dst} = ${vec('dot(' + src1[3] + ', ' + src2[3] + ')', dst.size)};",glsl:"${dst} = ${vec('dot(' + src1[3].glsl + ', ' + src2[3].glsl + ')', dst.size)};"},o.codes.DSTI={from:25,to:25,format:"1i",comment:"${dst} = vec4(1, ${src1.name}.y * ${src1.name}.y, ${src1.name}.z, ${src2.name}.w);"},o.codes.SGEI={from:26,to:26,format:"1i",comment:"${dst} = (${src1} >= ${src2}) ? 1.0 : 0.0;",glsl:"${dst.glsl} = (${src1.glsl} >= ${src2.glsl}) ? 1.0 : 0.0;"},o.codes.SLTI={from:27,to:27,format:"1i",comment:"${dst} = (${src1} < ${src2}) ? 1.0 : 0.0;",glsl:"${dst.glsl} = (${src1.glsl} < ${src2.glsl}) ? 1.0 : 0.0;"},o.codes.BREAK={from:32,to:32,format:"0",comment:"break;",glsl:"break;"},o.codes.NOP={from:33,to:33,format:"0",comment:";",glsl:""},o.codes.END={from:34,to:34,format:"0",comment:"exit;",glsl:"${glend()};\n${indent}return;"},o.codes.BREAKC={from:35,to:35,format:"2",comment:"if (${join(slice(parameters, 0, -2), ' ')}) { break; }",glsl:"if (${join(glsl(slice(parameters, 0, -2)), ' ')}) { break; }"},o.codes.CALL={from:36,to:36,format:"2",comment:"${callCode(parameters[parameters.length - 2], parameters[parameters.length - 1])};",glsl:"${glcall(parameters[parameters.length - 2], parameters[parameters.length - 1])};"},o.codes.CALLC={from:37,to:37,format:"2",comment:"if (${join(slice(parameters, 0, -2), ' ')}) { ${callCode(parameters[parameters.length - 2], parameters[parameters.length - 1])}; }",glsl:"if (${join(glsl(slice(parameters, 0, -2)), ' ')}) { \n${indent}    ${glcall(parameters[parameters.length - 2], parameters[parameters.length - 1])};\n${indent}}"},o.codes.CALLU={from:38,to:38,format:"3",reg:"b",comment:"if (${join(slice(parameters, 0, -2), ' ')}) { ${callCode(parameters[parameters.length - 2], parameters[parameters.length - 1])}; }",glsl:"if (${join(glsl(slice(parameters, 0, -2)), ' ')}) { \n${indent}    ${glcall(parameters[parameters.length - 2], parameters[parameters.length - 1])};\n${indent}}"},o.codes.IFU={from:39,to:39,format:"3",reg:"b",comment:"if (${if(parameters[parameters.length - 2] - line - 1 > 0, '', '!')}(${join(slice(parameters, 0, -2), ' ')})) { ${if(parameters[parameters.length - 2] - line - 1 > 0, callCode(line + 1, parameters[parameters.length - 2] - line - 1), callCode(parameters[parameters.length - 2], parameters[parameters.length - 1]))}; }${if((parameters[parameters.length - 2] - line - 1 > 0) && (parameters[parameters.length - 1] > 0), ' else { ' + callCode(parameters[parameters.length - 2], parameters[parameters.length - 1]) + '}', '')} goto ${label(parameters[1] + parameters[2])};",glsl:"if (${if(parameters[parameters.length - 2] - line - 1 > 0, '', '!')}(${join(glsl(slice(parameters, 0, -2)), ' ')})) { \n${glblock(0)}\n${indent}}${if((parameters[parameters.length - 2] - line - 1 > 0) && (parameters[parameters.length - 1] > 0), ' else {\\n' + glblock(1) + '\\n' + indent + '}', '')} "},o.codes.IFC={from:40,to:40,format:"2",comment:"if (${if(parameters[parameters.length - 2] - line - 1 > 0, '', '!')}(${join(slice(parameters, 0, -2), ' ')})) { ${if(parameters[parameters.length - 2] - line - 1 > 0, callCode(line + 1, parameters[1] - line - 1), callCode(parameters[parameters.length - 2], parameters[parameters.length - 1]))}; }${if((parameters[parameters.length - 2] - line - 1 > 0) && (parameters[parameters.length - 1] > 0), ' else { ' + callCode(parameters[parameters.length - 2], parameters[parameters.length - 1]) + '}', '')} goto ${label(parameters[1] + parameters[2])};",glsl:"if (${if(parameters[parameters.length - 2] - line - 1 > 0, '', '!')}(${join(glsl(slice(parameters, 0, -2)), ' ')})) { \n${glblock(0)}\n${indent}}${if((parameters[parameters.length - 2] - line - 1 > 0) && (parameters[parameters.length - 1] > 0), ' else {\\n' + glblock(1) + '\\n' + indent + '}', '')} "},o.codes.LOOP={from:41,to:41,format:"3",reg:"i",comment:"reg_al = ${parameters[0]}.y; loop (${parameters[0]}.x + 1) { ${callCode(line, parameters[1] - line)}; reg_al += ${parameters[0]}.z; }"},o.codes.EMIT={from:42,to:42,format:"0",comment:"emit;",glsl:""},o.codes.SETEMIT={from:43,to:43,format:"4",comment:"setemit(${parameters[0]}, ${join(slice(parameters, 1), ', ')});",glsl:""},o.codes.JMPC={from:44,to:44,format:"2",comment:"if (${join(slice(parameters, 0, -2), ' ')}) { goto ${label(parameters[parameters.length - 2])}; }",glsl:"if (!(${join(glsl(slice(parameters, 0, -2)), ' ')})) { \n${glblock(0)}\n${indent}}"},o.codes.JMPU={from:45,to:45,format:"3",reg:"b",comment:"if (${if((parameters[parameters.length - 1] & 0x1) == 1, '!', '')}(${join(slice(parameters, 0, -2), ' ')})) { goto ${label(parameters[parameters.length - 2])}; }",glsl:"if (!(${if((parameters[parameters.length - 1] & 0x1) == 1, '!', '')}(${join(glsl(slice(parameters, 0, -2)), ' ')}))) { \n${glblock(0)}\n${indent}}"},o.codes.CMP={from:46,to:47,format:"1c",comment:"cmp.x = ${join(slice(parameters, 0, 3), ' ')}; ${if(parameters.length > 3, 'cmp.y = ' + join(slice(parameters, 3), ' ') + ';', '')}",glsl:"gpu_cmp.x = ${join(glsl(slice(parameters, 0, 3)), ' ')}; ${if(parameters.length > 3, '\n' + indent + 'gpu_cmp.y = ' + join(glsl(slice(parameters, 3)), ' ') + ';', '')}"},o.codes.MADI={from:48,to:55,format:"5i",strip:!0,comment:"${dst} = ${src1} * ${src2} + ${src3};",glsl:"${dst.glsl} = ${src1.glsl} * ${src2.glsl} + ${src3.glsl};"},o.codes.MAD={from:56,to:63,format:"5",strip:!0,comment:"${dst} = ${src1} * ${src2} + ${src3};",glsl:"${dst.glsl} = ${src1.glsl} * ${src2.glsl} + ${src3.glsl};"},o.functors={vec:function(e,r,t,s,o,n){switch(n){case 1:return"float("+o+")";case 2:return"vec2("+o+")";case 3:return"vec3("+o+")";case 4:return"vec4("+o+")";default:throw new Error("Unsupported dimension "+n)}},label:function(e,r,t,s,o){return t.report.labels[o]?t.report.labels[o].name.trim():"0x"+o.toString(16)},callCode:function(e,r,t,s,o,n){return 0===n?"":t.report.labels.hasOwnProperty(o)&&t.report.labels[o].end+1===o+n?t.report.labels[o].name.trim()+"()":"call 0x"+o.toString(16)+" +0x"+n.toString(16)}},o.float=function(e){let r=e.toString();return-1===r.indexOf(".")?r+=".0":r.split(".")[1].length>=7&&(r=e.toFixed(7)),r};const n=function(e,r,t,s,o){this.sign=e,this.name=r,this.offset=t,this.components=s,this.shader=o};n.prototype.toString=function(e,t){e||(e="");let s=this.offset;r.is.nil(s)||""===s||(s=r.is(s,n)?"["+s.toString(e)+"]":"["+s+"]");let o=this.components;o&&(o="."+o),".xyzw"===o&&(o="");let a=e+this.name+s;return t&&t[a]&&(a=t[a]),this.sign?"("+this.sign+a+o+")":a+o},Object.defineProperty(n.prototype,"size",{get:function(){return this.components.length}}),Object.defineProperty(n.prototype,"1",{get:function(){return new n(this.sign,this.name,this.offset,this.components[0],this.shader)}}),Object.defineProperty(n.prototype,"@1",{get:function(){return new n(this.sign,this.name,this.offset,this.components[0],this.shader)}}),Object.defineProperty(n.prototype,"2",{get:function(){return new n(this.sign,this.name,this.offset,this.components.slice(0,2),this.shader)}}),Object.defineProperty(n.prototype,"@2",{get:function(){return new n(this.sign,this.name,this.offset,this.components[1],this.shader)}}),Object.defineProperty(n.prototype,"3",{get:function(){return new n(this.sign,this.name,this.offset,this.components.slice(0,3),this.shader)}}),Object.defineProperty(n.prototype,"4",{get:function(){return new n(this.sign,this.name,this.offset,this.components.slice(0,4),this.shader)}}),Object.defineProperty(n.prototype,"x",{get:function(){return new n(this.sign,this.name,this.offset,"x",this.shader)}}),Object.defineProperty(n.prototype,"y",{get:function(){return new n(this.sign,this.name,this.offset,"y",this.shader)}}),Object.defineProperty(n.prototype,"xy",{get:function(){return new n(this.sign,this.name,this.offset,"xy",this.shader)}}),Object.defineProperty(n.prototype,"glsl",{get:function(){let e=this.shader.pica.shader?this.shader.pica.shader.vertex:null;if(!e||r.is.nil(e.entryPoint)?e=this.shader.pica.shader?this.shader.pica.shader.geometry:null:e&&!r.is.nil(e.entryPoint)||(e=null),!e)return this.toString();const t=e=>{let r=this.components;r&&(r="."+r),".xyzw"===r&&(r="");let t=this.name.slice(1);if(this.offset){let e=this.offset.glsl;this.shader.offsetMap[e]&&(e=this.shader.offsetMap[e]),t+=" + "+e}let s=e+this.name[0];return n.glslMap[s]&&(s=n.glslMap[s]),s=s+"["+t+"]",n.glslMap[s]&&(s=n.glslMap[s]),this.sign?"("+this.sign+s+r+")":s+r};switch(this.name[0]){case"b":return this.toString("gpu_",n.glslMap);case"i":case"r":return t("gpu_");case"c":if("cmp"===this.name)return this.toString("gpu_",n.glslMap);if(this.shader.pica.shader.vertex.floats[this.name.slice(1)]){let e=this.shader.pica.shader.vertex.floats[this.name.slice(1)],r=this.components.split("").map(r=>o.float(e[r]));return r.length>1?"vec"+r.length+"("+r.join(", ")+")":r[0]}return t("gpu_");case"v":case"o":return this.toString("gpu_",n.glslMap);default:return"a0"===this.name||"al"===this.name?this.toString("gpu_",n.glslMap):this.toString()}}}),n.glslMap={gpu_v0:"position",gpu_v1:"normal",gpu_v2:"tangent",gpu_v3:"color",gpu_v4:"uv",gpu_v5:"uv2",gpu_v6:"uv3",gpu_v7:"boneIndex",gpu_v8:"boneWeight",gpu_o0:"fragPosition",gpu_o1:"fragQuaternionNormal",gpu_o2:"fragView",gpu_o3:"fragColor",gpu_o4:"fragUV",gpu_o5:"fragUV2",gpu_o6:"fragUV3",gpu_b0:"hasBone",gpu_b1:"needColor",gpu_b2:"hasUVMap",gpu_b3:"hasUVMap2",gpu_b4:"hasUVMap3",gpu_b5:"needUVMap2SphereReflection",gpu_b6:"needUVMap3SphereReflection",gpu_b7:"needLightSpecular",gpu_b8:"needViewSpecular",gpu_b9:"needDiffuse",gpu_b10:"hasTangent",gpu_b11:"hasBoneW",gpu_c:"vectors"},o.Register=n,module.exports=o})(0,this.$);